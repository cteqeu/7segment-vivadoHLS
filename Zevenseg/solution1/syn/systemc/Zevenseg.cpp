// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Zevenseg.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Zevenseg::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Zevenseg::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> Zevenseg::ap_ST_fsm_state1 = "1";
const sc_lv<4> Zevenseg::ap_ST_fsm_state2 = "10";
const sc_lv<4> Zevenseg::ap_ST_fsm_state3 = "100";
const sc_lv<4> Zevenseg::ap_ST_fsm_state4 = "1000";
const sc_lv<32> Zevenseg::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> Zevenseg::ap_const_lv1_1 = "1";
const sc_lv<32> Zevenseg::ap_const_lv32_1 = "1";
const sc_lv<32> Zevenseg::ap_const_lv32_2 = "10";
const sc_lv<32> Zevenseg::ap_const_lv32_3 = "11";
const sc_lv<27> Zevenseg::ap_const_lv27_0 = "000000000000000000000000000";
const sc_lv<1> Zevenseg::ap_const_lv1_0 = "0";
const sc_lv<32> Zevenseg::ap_const_lv32_4 = "100";
const sc_lv<32> Zevenseg::ap_const_lv32_1F = "11111";
const sc_lv<28> Zevenseg::ap_const_lv28_0 = "0000000000000000000000000000";
const sc_lv<32> Zevenseg::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<31> Zevenseg::ap_const_lv31_7FFFFFFF = "1111111111111111111111111111111";
const sc_lv<31> Zevenseg::ap_const_lv31_F = "1111";
const sc_lv<7> Zevenseg::ap_const_lv7_40 = "1000000";
const sc_lv<7> Zevenseg::ap_const_lv7_0 = "0000000";
const sc_lv<7> Zevenseg::ap_const_lv7_24 = "100100";
const sc_lv<7> Zevenseg::ap_const_lv7_79 = "1111001";
const sc_lv<7> Zevenseg::ap_const_lv7_19 = "11001";
const sc_lv<7> Zevenseg::ap_const_lv7_30 = "110000";
const sc_lv<32> Zevenseg::ap_const_lv32_5 = "101";
const sc_lv<32> Zevenseg::ap_const_lv32_6 = "110";
const sc_lv<7> Zevenseg::ap_const_lv7_2 = "10";
const sc_lv<7> Zevenseg::ap_const_lv7_12 = "10010";
const sc_lv<32> Zevenseg::ap_const_lv32_7 = "111";
const sc_lv<32> Zevenseg::ap_const_lv32_F = "1111";
const sc_lv<7> Zevenseg::ap_const_lv7_E = "1110";
const sc_lv<7> Zevenseg::ap_const_lv7_78 = "1111000";
const sc_lv<32> Zevenseg::ap_const_lv32_9 = "1001";
const sc_lv<32> Zevenseg::ap_const_lv32_A = "1010";
const sc_lv<32> Zevenseg::ap_const_lv32_B = "1011";
const sc_lv<32> Zevenseg::ap_const_lv32_C = "1100";
const sc_lv<32> Zevenseg::ap_const_lv32_D = "1101";
const sc_lv<32> Zevenseg::ap_const_lv32_E = "1110";
const sc_lv<7> Zevenseg::ap_const_lv7_8 = "1000";
const sc_lv<7> Zevenseg::ap_const_lv7_10 = "10000";
const sc_lv<7> Zevenseg::ap_const_lv7_46 = "1000110";
const sc_lv<7> Zevenseg::ap_const_lv7_3 = "11";
const sc_lv<7> Zevenseg::ap_const_lv7_6 = "110";
const sc_lv<7> Zevenseg::ap_const_lv7_21 = "100001";
const sc_lv<27> Zevenseg::ap_const_lv27_5F5E100 = "101111101011110000100000000";
const sc_lv<27> Zevenseg::ap_const_lv27_1 = "1";

Zevenseg::Zevenseg(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_452_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_452_p2 );

    SC_METHOD(thread_display_V);
    sensitive << ( value_display_i_reg_526 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_452_p2 );

    SC_METHOD(thread_display_V_ap_vld);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_452_p2 );

    SC_METHOD(thread_exitcond_fu_452_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_reg_126 );

    SC_METHOD(thread_i_1_fu_458_p2);
    sensitive << ( i_reg_126 );

    SC_METHOD(thread_icmp_fu_157_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_1_fu_147_p4 );

    SC_METHOD(thread_led_V);
    sensitive << ( tmp_5_reg_483 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_452_p2 );

    SC_METHOD(thread_led_V_ap_vld);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_452_p2 );

    SC_METHOD(thread_p_1_cast_fu_203_p1);
    sensitive << ( p_1_fu_195_p3 );

    SC_METHOD(thread_p_1_fu_195_p3);
    sensitive << ( tmp_4_fu_187_p3 );
    sensitive << ( tmp_2_cast_fu_181_p2 );

    SC_METHOD(thread_p_s_fu_163_p3);
    sensitive << ( tmp_fu_141_p2 );
    sensitive << ( icmp_fu_157_p2 );

    SC_METHOD(thread_tmp_10_i_fu_288_p2);
    sensitive << ( tmp_8_i_fu_275_p2 );
    sensitive << ( tmp_7_i_fu_270_p2 );

    SC_METHOD(thread_tmp_11_i_fu_294_p3);
    sensitive << ( tmp_10_i_fu_288_p2 );
    sensitive << ( tmp_9_i_cast_cast_fu_280_p3 );
    sensitive << ( tmp_6_i_fu_262_p3 );

    SC_METHOD(thread_tmp_12_i_fu_302_p2);
    sensitive << ( value_assign_reg_464 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_13_i_fu_307_p2);
    sensitive << ( value_assign_reg_464 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_14_i_cast_cast_fu_312_p3);
    sensitive << ( tmp_13_i_fu_307_p2 );

    SC_METHOD(thread_tmp_15_i_fu_320_p2);
    sensitive << ( tmp_13_i_fu_307_p2 );
    sensitive << ( tmp_12_i_fu_302_p2 );

    SC_METHOD(thread_tmp_16_i_fu_326_p3);
    sensitive << ( tmp_15_i_fu_320_p2 );
    sensitive << ( tmp_14_i_cast_cast_fu_312_p3 );
    sensitive << ( tmp_11_i_fu_294_p3 );

    SC_METHOD(thread_tmp_17_i_fu_334_p2);
    sensitive << ( value_assign_reg_464 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_18_i_fu_339_p2);
    sensitive << ( value_assign_reg_464 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_19_i_cast_cast_fu_344_p3);
    sensitive << ( tmp_18_i_fu_339_p2 );

    SC_METHOD(thread_tmp_1_fu_147_p4);
    sensitive << ( tmp_fu_141_p2 );

    SC_METHOD(thread_tmp_1_i_fu_230_p3);
    sensitive << ( tmp_i_fu_225_p2 );

    SC_METHOD(thread_tmp_20_i_fu_352_p2);
    sensitive << ( tmp_18_i_fu_339_p2 );
    sensitive << ( tmp_17_i_fu_334_p2 );

    SC_METHOD(thread_tmp_21_i_fu_358_p3);
    sensitive << ( tmp_20_i_fu_352_p2 );
    sensitive << ( tmp_19_i_cast_cast_fu_344_p3 );
    sensitive << ( tmp_16_i_fu_326_p3 );

    SC_METHOD(thread_tmp_22_i_fu_366_p2);
    sensitive << ( value_assign_reg_464 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_23_i_fu_371_p2);
    sensitive << ( value_assign_reg_464 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_24_i_cast_cast_fu_396_p3);
    sensitive << ( tmp_23_i_reg_498 );

    SC_METHOD(thread_tmp_25_i_fu_403_p2);
    sensitive << ( tmp_22_i_reg_493 );
    sensitive << ( tmp_23_i_reg_498 );

    SC_METHOD(thread_tmp_26_i_fu_407_p3);
    sensitive << ( tmp_21_i_reg_488 );
    sensitive << ( tmp_25_i_fu_403_p2 );
    sensitive << ( tmp_24_i_cast_cast_fu_396_p3 );

    SC_METHOD(thread_tmp_27_i_fu_376_p2);
    sensitive << ( value_assign_reg_464 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_28_i_fu_381_p2);
    sensitive << ( value_assign_reg_464 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_29_i_fu_414_p3);
    sensitive << ( tmp_28_i_reg_509 );

    SC_METHOD(thread_tmp_2_cast_fu_181_p2);
    sensitive << ( tmp_3_fu_171_p1 );

    SC_METHOD(thread_tmp_2_fu_175_p2);
    sensitive << ( value_r );

    SC_METHOD(thread_tmp_2_i_fu_238_p2);
    sensitive << ( value_assign_reg_464 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_30_i_fu_421_p2);
    sensitive << ( tmp_27_i_reg_504 );
    sensitive << ( tmp_28_i_reg_509 );

    SC_METHOD(thread_tmp_31_i_fu_425_p3);
    sensitive << ( tmp_30_i_fu_421_p2 );
    sensitive << ( tmp_29_i_fu_414_p3 );
    sensitive << ( tmp_26_i_fu_407_p3 );

    SC_METHOD(thread_tmp_32_i_fu_386_p2);
    sensitive << ( value_assign_reg_464 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_33_i_fu_391_p2);
    sensitive << ( value_assign_reg_464 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_34_i_cast_cast_fu_433_p3);
    sensitive << ( tmp_33_i_reg_520 );

    SC_METHOD(thread_tmp_35_i_fu_440_p2);
    sensitive << ( tmp_32_i_reg_515 );
    sensitive << ( tmp_33_i_reg_520 );

    SC_METHOD(thread_tmp_3_fu_171_p1);
    sensitive << ( value_r );

    SC_METHOD(thread_tmp_3_i_fu_243_p2);
    sensitive << ( value_assign_reg_464 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_4_fu_187_p3);
    sensitive << ( tmp_2_fu_175_p2 );

    SC_METHOD(thread_tmp_4_i_fu_248_p3);
    sensitive << ( tmp_3_i_fu_243_p2 );

    SC_METHOD(thread_tmp_5_fu_221_p1);
    sensitive << ( value_assign_fu_207_p3 );

    SC_METHOD(thread_tmp_5_i_fu_256_p2);
    sensitive << ( tmp_3_i_fu_243_p2 );
    sensitive << ( tmp_2_i_fu_238_p2 );

    SC_METHOD(thread_tmp_6_i_fu_262_p3);
    sensitive << ( tmp_5_i_fu_256_p2 );
    sensitive << ( tmp_4_i_fu_248_p3 );
    sensitive << ( tmp_1_i_fu_230_p3 );

    SC_METHOD(thread_tmp_7_i_fu_270_p2);
    sensitive << ( value_assign_reg_464 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_8_i_fu_275_p2);
    sensitive << ( value_assign_reg_464 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_9_i_cast_cast_fu_280_p3);
    sensitive << ( tmp_8_i_fu_275_p2 );

    SC_METHOD(thread_tmp_fu_141_p2);
    sensitive << ( value_r );

    SC_METHOD(thread_tmp_i_fu_225_p2);
    sensitive << ( value_assign_reg_464 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_value_assign_fu_207_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( sw );

    SC_METHOD(thread_value_assign_fu_207_p3);
    sensitive << ( value_assign_fu_207_p0 );
    sensitive << ( p_s_fu_163_p3 );
    sensitive << ( p_1_cast_fu_203_p1 );

    SC_METHOD(thread_value_display_i_fu_444_p3);
    sensitive << ( tmp_35_i_fu_440_p2 );
    sensitive << ( tmp_34_i_cast_cast_fu_433_p3 );
    sensitive << ( tmp_31_i_fu_425_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_452_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0001";
    value_r = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Zevenseg_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, sw, "(port)sw");
    sc_trace(mVcdFile, led_V, "(port)led_V");
    sc_trace(mVcdFile, led_V_ap_vld, "(port)led_V_ap_vld");
    sc_trace(mVcdFile, display_V, "(port)display_V");
    sc_trace(mVcdFile, display_V_ap_vld, "(port)display_V_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, value_r, "value_r");
    sc_trace(mVcdFile, value_assign_fu_207_p3, "value_assign_fu_207_p3");
    sc_trace(mVcdFile, value_assign_reg_464, "value_assign_reg_464");
    sc_trace(mVcdFile, tmp_5_fu_221_p1, "tmp_5_fu_221_p1");
    sc_trace(mVcdFile, tmp_5_reg_483, "tmp_5_reg_483");
    sc_trace(mVcdFile, tmp_21_i_fu_358_p3, "tmp_21_i_fu_358_p3");
    sc_trace(mVcdFile, tmp_21_i_reg_488, "tmp_21_i_reg_488");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_22_i_fu_366_p2, "tmp_22_i_fu_366_p2");
    sc_trace(mVcdFile, tmp_22_i_reg_493, "tmp_22_i_reg_493");
    sc_trace(mVcdFile, tmp_23_i_fu_371_p2, "tmp_23_i_fu_371_p2");
    sc_trace(mVcdFile, tmp_23_i_reg_498, "tmp_23_i_reg_498");
    sc_trace(mVcdFile, tmp_27_i_fu_376_p2, "tmp_27_i_fu_376_p2");
    sc_trace(mVcdFile, tmp_27_i_reg_504, "tmp_27_i_reg_504");
    sc_trace(mVcdFile, tmp_28_i_fu_381_p2, "tmp_28_i_fu_381_p2");
    sc_trace(mVcdFile, tmp_28_i_reg_509, "tmp_28_i_reg_509");
    sc_trace(mVcdFile, tmp_32_i_fu_386_p2, "tmp_32_i_fu_386_p2");
    sc_trace(mVcdFile, tmp_32_i_reg_515, "tmp_32_i_reg_515");
    sc_trace(mVcdFile, tmp_33_i_fu_391_p2, "tmp_33_i_fu_391_p2");
    sc_trace(mVcdFile, tmp_33_i_reg_520, "tmp_33_i_reg_520");
    sc_trace(mVcdFile, value_display_i_fu_444_p3, "value_display_i_fu_444_p3");
    sc_trace(mVcdFile, value_display_i_reg_526, "value_display_i_reg_526");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_1_fu_458_p2, "i_1_fu_458_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_reg_126, "i_reg_126");
    sc_trace(mVcdFile, exitcond_fu_452_p2, "exitcond_fu_452_p2");
    sc_trace(mVcdFile, tmp_fu_141_p2, "tmp_fu_141_p2");
    sc_trace(mVcdFile, tmp_1_fu_147_p4, "tmp_1_fu_147_p4");
    sc_trace(mVcdFile, icmp_fu_157_p2, "icmp_fu_157_p2");
    sc_trace(mVcdFile, tmp_3_fu_171_p1, "tmp_3_fu_171_p1");
    sc_trace(mVcdFile, tmp_2_fu_175_p2, "tmp_2_fu_175_p2");
    sc_trace(mVcdFile, tmp_4_fu_187_p3, "tmp_4_fu_187_p3");
    sc_trace(mVcdFile, tmp_2_cast_fu_181_p2, "tmp_2_cast_fu_181_p2");
    sc_trace(mVcdFile, p_1_fu_195_p3, "p_1_fu_195_p3");
    sc_trace(mVcdFile, value_assign_fu_207_p0, "value_assign_fu_207_p0");
    sc_trace(mVcdFile, p_s_fu_163_p3, "p_s_fu_163_p3");
    sc_trace(mVcdFile, p_1_cast_fu_203_p1, "p_1_cast_fu_203_p1");
    sc_trace(mVcdFile, tmp_i_fu_225_p2, "tmp_i_fu_225_p2");
    sc_trace(mVcdFile, tmp_3_i_fu_243_p2, "tmp_3_i_fu_243_p2");
    sc_trace(mVcdFile, tmp_2_i_fu_238_p2, "tmp_2_i_fu_238_p2");
    sc_trace(mVcdFile, tmp_5_i_fu_256_p2, "tmp_5_i_fu_256_p2");
    sc_trace(mVcdFile, tmp_4_i_fu_248_p3, "tmp_4_i_fu_248_p3");
    sc_trace(mVcdFile, tmp_1_i_fu_230_p3, "tmp_1_i_fu_230_p3");
    sc_trace(mVcdFile, tmp_8_i_fu_275_p2, "tmp_8_i_fu_275_p2");
    sc_trace(mVcdFile, tmp_7_i_fu_270_p2, "tmp_7_i_fu_270_p2");
    sc_trace(mVcdFile, tmp_10_i_fu_288_p2, "tmp_10_i_fu_288_p2");
    sc_trace(mVcdFile, tmp_9_i_cast_cast_fu_280_p3, "tmp_9_i_cast_cast_fu_280_p3");
    sc_trace(mVcdFile, tmp_6_i_fu_262_p3, "tmp_6_i_fu_262_p3");
    sc_trace(mVcdFile, tmp_13_i_fu_307_p2, "tmp_13_i_fu_307_p2");
    sc_trace(mVcdFile, tmp_12_i_fu_302_p2, "tmp_12_i_fu_302_p2");
    sc_trace(mVcdFile, tmp_15_i_fu_320_p2, "tmp_15_i_fu_320_p2");
    sc_trace(mVcdFile, tmp_14_i_cast_cast_fu_312_p3, "tmp_14_i_cast_cast_fu_312_p3");
    sc_trace(mVcdFile, tmp_11_i_fu_294_p3, "tmp_11_i_fu_294_p3");
    sc_trace(mVcdFile, tmp_18_i_fu_339_p2, "tmp_18_i_fu_339_p2");
    sc_trace(mVcdFile, tmp_17_i_fu_334_p2, "tmp_17_i_fu_334_p2");
    sc_trace(mVcdFile, tmp_20_i_fu_352_p2, "tmp_20_i_fu_352_p2");
    sc_trace(mVcdFile, tmp_19_i_cast_cast_fu_344_p3, "tmp_19_i_cast_cast_fu_344_p3");
    sc_trace(mVcdFile, tmp_16_i_fu_326_p3, "tmp_16_i_fu_326_p3");
    sc_trace(mVcdFile, tmp_25_i_fu_403_p2, "tmp_25_i_fu_403_p2");
    sc_trace(mVcdFile, tmp_24_i_cast_cast_fu_396_p3, "tmp_24_i_cast_cast_fu_396_p3");
    sc_trace(mVcdFile, tmp_30_i_fu_421_p2, "tmp_30_i_fu_421_p2");
    sc_trace(mVcdFile, tmp_29_i_fu_414_p3, "tmp_29_i_fu_414_p3");
    sc_trace(mVcdFile, tmp_26_i_fu_407_p3, "tmp_26_i_fu_407_p3");
    sc_trace(mVcdFile, tmp_35_i_fu_440_p2, "tmp_35_i_fu_440_p2");
    sc_trace(mVcdFile, tmp_34_i_cast_cast_fu_433_p3, "tmp_34_i_cast_cast_fu_433_p3");
    sc_trace(mVcdFile, tmp_31_i_fu_425_p3, "tmp_31_i_fu_425_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("Zevenseg.hdltvin.dat");
    mHdltvoutHandle.open("Zevenseg.hdltvout.dat");
}

Zevenseg::~Zevenseg() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void Zevenseg::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_452_p2.read(), ap_const_lv1_0))) {
        i_reg_126 = i_1_fu_458_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        i_reg_126 = ap_const_lv27_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        tmp_21_i_reg_488 = tmp_21_i_fu_358_p3.read();
        tmp_22_i_reg_493 = tmp_22_i_fu_366_p2.read();
        tmp_23_i_reg_498 = tmp_23_i_fu_371_p2.read();
        tmp_27_i_reg_504 = tmp_27_i_fu_376_p2.read();
        tmp_28_i_reg_509 = tmp_28_i_fu_381_p2.read();
        tmp_32_i_reg_515 = tmp_32_i_fu_386_p2.read();
        tmp_33_i_reg_520 = tmp_33_i_fu_391_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        tmp_5_reg_483 = tmp_5_fu_221_p1.read();
        value_assign_reg_464 = value_assign_fu_207_p3.read();
        value_r = value_assign_fu_207_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        value_display_i_reg_526 = value_display_i_fu_444_p3.read();
    }
}

void Zevenseg::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void Zevenseg::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void Zevenseg::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void Zevenseg::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void Zevenseg::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
         !esl_seteq<1,1,1>(exitcond_fu_452_p2.read(), ap_const_lv1_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Zevenseg::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Zevenseg::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
         !esl_seteq<1,1,1>(exitcond_fu_452_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Zevenseg::thread_display_V() {
    display_V = value_display_i_reg_526.read();
}

void Zevenseg::thread_display_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_452_p2.read(), ap_const_lv1_0))) {
        display_V_ap_vld = ap_const_logic_1;
    } else {
        display_V_ap_vld = ap_const_logic_0;
    }
}

void Zevenseg::thread_exitcond_fu_452_p2() {
    exitcond_fu_452_p2 = (!i_reg_126.read().is_01() || !ap_const_lv27_5F5E100.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_126.read() == ap_const_lv27_5F5E100);
}

void Zevenseg::thread_i_1_fu_458_p2() {
    i_1_fu_458_p2 = (!i_reg_126.read().is_01() || !ap_const_lv27_1.is_01())? sc_lv<27>(): (sc_biguint<27>(i_reg_126.read()) + sc_biguint<27>(ap_const_lv27_1));
}

void Zevenseg::thread_icmp_fu_157_p2() {
    icmp_fu_157_p2 = (!tmp_1_fu_147_p4.read().is_01() || !ap_const_lv28_0.is_01())? sc_lv<1>(): (sc_bigint<28>(tmp_1_fu_147_p4.read()) > sc_bigint<28>(ap_const_lv28_0));
}

void Zevenseg::thread_led_V() {
    led_V = tmp_5_reg_483.read();
}

void Zevenseg::thread_led_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_452_p2.read(), ap_const_lv1_0))) {
        led_V_ap_vld = ap_const_logic_1;
    } else {
        led_V_ap_vld = ap_const_logic_0;
    }
}

void Zevenseg::thread_p_1_cast_fu_203_p1() {
    p_1_cast_fu_203_p1 = esl_zext<32,31>(p_1_fu_195_p3.read());
}

void Zevenseg::thread_p_1_fu_195_p3() {
    p_1_fu_195_p3 = (!tmp_4_fu_187_p3.read()[0].is_01())? sc_lv<31>(): ((tmp_4_fu_187_p3.read()[0].to_bool())? ap_const_lv31_F: tmp_2_cast_fu_181_p2.read());
}

void Zevenseg::thread_p_s_fu_163_p3() {
    p_s_fu_163_p3 = (!icmp_fu_157_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_fu_157_p2.read()[0].to_bool())? ap_const_lv32_0: tmp_fu_141_p2.read());
}

void Zevenseg::thread_tmp_10_i_fu_288_p2() {
    tmp_10_i_fu_288_p2 = (tmp_8_i_fu_275_p2.read() | tmp_7_i_fu_270_p2.read());
}

void Zevenseg::thread_tmp_11_i_fu_294_p3() {
    tmp_11_i_fu_294_p3 = (!tmp_10_i_fu_288_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_10_i_fu_288_p2.read()[0].to_bool())? tmp_9_i_cast_cast_fu_280_p3.read(): tmp_6_i_fu_262_p3.read());
}

void Zevenseg::thread_tmp_12_i_fu_302_p2() {
    tmp_12_i_fu_302_p2 = (!value_assign_reg_464.read().is_01() || !ap_const_lv32_5.is_01())? sc_lv<1>(): sc_lv<1>(value_assign_reg_464.read() == ap_const_lv32_5);
}

void Zevenseg::thread_tmp_13_i_fu_307_p2() {
    tmp_13_i_fu_307_p2 = (!value_assign_reg_464.read().is_01() || !ap_const_lv32_6.is_01())? sc_lv<1>(): sc_lv<1>(value_assign_reg_464.read() == ap_const_lv32_6);
}

void Zevenseg::thread_tmp_14_i_cast_cast_fu_312_p3() {
    tmp_14_i_cast_cast_fu_312_p3 = (!tmp_13_i_fu_307_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_13_i_fu_307_p2.read()[0].to_bool())? ap_const_lv7_2: ap_const_lv7_12);
}

void Zevenseg::thread_tmp_15_i_fu_320_p2() {
    tmp_15_i_fu_320_p2 = (tmp_13_i_fu_307_p2.read() | tmp_12_i_fu_302_p2.read());
}

void Zevenseg::thread_tmp_16_i_fu_326_p3() {
    tmp_16_i_fu_326_p3 = (!tmp_15_i_fu_320_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_15_i_fu_320_p2.read()[0].to_bool())? tmp_14_i_cast_cast_fu_312_p3.read(): tmp_11_i_fu_294_p3.read());
}

void Zevenseg::thread_tmp_17_i_fu_334_p2() {
    tmp_17_i_fu_334_p2 = (!value_assign_reg_464.read().is_01() || !ap_const_lv32_7.is_01())? sc_lv<1>(): sc_lv<1>(value_assign_reg_464.read() == ap_const_lv32_7);
}

void Zevenseg::thread_tmp_18_i_fu_339_p2() {
    tmp_18_i_fu_339_p2 = (!value_assign_reg_464.read().is_01() || !ap_const_lv32_F.is_01())? sc_lv<1>(): sc_lv<1>(value_assign_reg_464.read() == ap_const_lv32_F);
}

void Zevenseg::thread_tmp_19_i_cast_cast_fu_344_p3() {
    tmp_19_i_cast_cast_fu_344_p3 = (!tmp_18_i_fu_339_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_18_i_fu_339_p2.read()[0].to_bool())? ap_const_lv7_E: ap_const_lv7_78);
}

void Zevenseg::thread_tmp_1_fu_147_p4() {
    tmp_1_fu_147_p4 = tmp_fu_141_p2.read().range(31, 4);
}

void Zevenseg::thread_tmp_1_i_fu_230_p3() {
    tmp_1_i_fu_230_p3 = (!tmp_i_fu_225_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_i_fu_225_p2.read()[0].to_bool())? ap_const_lv7_40: ap_const_lv7_0);
}

void Zevenseg::thread_tmp_20_i_fu_352_p2() {
    tmp_20_i_fu_352_p2 = (tmp_18_i_fu_339_p2.read() | tmp_17_i_fu_334_p2.read());
}

void Zevenseg::thread_tmp_21_i_fu_358_p3() {
    tmp_21_i_fu_358_p3 = (!tmp_20_i_fu_352_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_20_i_fu_352_p2.read()[0].to_bool())? tmp_19_i_cast_cast_fu_344_p3.read(): tmp_16_i_fu_326_p3.read());
}

void Zevenseg::thread_tmp_22_i_fu_366_p2() {
    tmp_22_i_fu_366_p2 = (!value_assign_reg_464.read().is_01() || !ap_const_lv32_9.is_01())? sc_lv<1>(): sc_lv<1>(value_assign_reg_464.read() == ap_const_lv32_9);
}

void Zevenseg::thread_tmp_23_i_fu_371_p2() {
    tmp_23_i_fu_371_p2 = (!value_assign_reg_464.read().is_01() || !ap_const_lv32_A.is_01())? sc_lv<1>(): sc_lv<1>(value_assign_reg_464.read() == ap_const_lv32_A);
}

void Zevenseg::thread_tmp_24_i_cast_cast_fu_396_p3() {
    tmp_24_i_cast_cast_fu_396_p3 = (!tmp_23_i_reg_498.read()[0].is_01())? sc_lv<7>(): ((tmp_23_i_reg_498.read()[0].to_bool())? ap_const_lv7_8: ap_const_lv7_10);
}

void Zevenseg::thread_tmp_25_i_fu_403_p2() {
    tmp_25_i_fu_403_p2 = (tmp_23_i_reg_498.read() | tmp_22_i_reg_493.read());
}

void Zevenseg::thread_tmp_26_i_fu_407_p3() {
    tmp_26_i_fu_407_p3 = (!tmp_25_i_fu_403_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_25_i_fu_403_p2.read()[0].to_bool())? tmp_24_i_cast_cast_fu_396_p3.read(): tmp_21_i_reg_488.read());
}

void Zevenseg::thread_tmp_27_i_fu_376_p2() {
    tmp_27_i_fu_376_p2 = (!value_assign_reg_464.read().is_01() || !ap_const_lv32_B.is_01())? sc_lv<1>(): sc_lv<1>(value_assign_reg_464.read() == ap_const_lv32_B);
}

void Zevenseg::thread_tmp_28_i_fu_381_p2() {
    tmp_28_i_fu_381_p2 = (!value_assign_reg_464.read().is_01() || !ap_const_lv32_C.is_01())? sc_lv<1>(): sc_lv<1>(value_assign_reg_464.read() == ap_const_lv32_C);
}

void Zevenseg::thread_tmp_29_i_fu_414_p3() {
    tmp_29_i_fu_414_p3 = (!tmp_28_i_reg_509.read()[0].is_01())? sc_lv<7>(): ((tmp_28_i_reg_509.read()[0].to_bool())? ap_const_lv7_46: ap_const_lv7_3);
}

void Zevenseg::thread_tmp_2_cast_fu_181_p2() {
    tmp_2_cast_fu_181_p2 = (!ap_const_lv31_7FFFFFFF.is_01() || !tmp_3_fu_171_p1.read().is_01())? sc_lv<31>(): (sc_bigint<31>(ap_const_lv31_7FFFFFFF) + sc_biguint<31>(tmp_3_fu_171_p1.read()));
}

void Zevenseg::thread_tmp_2_fu_175_p2() {
    tmp_2_fu_175_p2 = (!ap_const_lv32_FFFFFFFF.is_01() || !value_r.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFFF) + sc_biguint<32>(value_r.read()));
}

void Zevenseg::thread_tmp_2_i_fu_238_p2() {
    tmp_2_i_fu_238_p2 = (!value_assign_reg_464.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): sc_lv<1>(value_assign_reg_464.read() == ap_const_lv32_1);
}

void Zevenseg::thread_tmp_30_i_fu_421_p2() {
    tmp_30_i_fu_421_p2 = (tmp_28_i_reg_509.read() | tmp_27_i_reg_504.read());
}

void Zevenseg::thread_tmp_31_i_fu_425_p3() {
    tmp_31_i_fu_425_p3 = (!tmp_30_i_fu_421_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_30_i_fu_421_p2.read()[0].to_bool())? tmp_29_i_fu_414_p3.read(): tmp_26_i_fu_407_p3.read());
}

void Zevenseg::thread_tmp_32_i_fu_386_p2() {
    tmp_32_i_fu_386_p2 = (!value_assign_reg_464.read().is_01() || !ap_const_lv32_D.is_01())? sc_lv<1>(): sc_lv<1>(value_assign_reg_464.read() == ap_const_lv32_D);
}

void Zevenseg::thread_tmp_33_i_fu_391_p2() {
    tmp_33_i_fu_391_p2 = (!value_assign_reg_464.read().is_01() || !ap_const_lv32_E.is_01())? sc_lv<1>(): sc_lv<1>(value_assign_reg_464.read() == ap_const_lv32_E);
}

void Zevenseg::thread_tmp_34_i_cast_cast_fu_433_p3() {
    tmp_34_i_cast_cast_fu_433_p3 = (!tmp_33_i_reg_520.read()[0].is_01())? sc_lv<7>(): ((tmp_33_i_reg_520.read()[0].to_bool())? ap_const_lv7_6: ap_const_lv7_21);
}

void Zevenseg::thread_tmp_35_i_fu_440_p2() {
    tmp_35_i_fu_440_p2 = (tmp_33_i_reg_520.read() | tmp_32_i_reg_515.read());
}

void Zevenseg::thread_tmp_3_fu_171_p1() {
    tmp_3_fu_171_p1 = value_r.read().range(31-1, 0);
}

void Zevenseg::thread_tmp_3_i_fu_243_p2() {
    tmp_3_i_fu_243_p2 = (!value_assign_reg_464.read().is_01() || !ap_const_lv32_2.is_01())? sc_lv<1>(): sc_lv<1>(value_assign_reg_464.read() == ap_const_lv32_2);
}

void Zevenseg::thread_tmp_4_fu_187_p3() {
    tmp_4_fu_187_p3 = tmp_2_fu_175_p2.read().range(31, 31);
}

void Zevenseg::thread_tmp_4_i_fu_248_p3() {
    tmp_4_i_fu_248_p3 = (!tmp_3_i_fu_243_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_3_i_fu_243_p2.read()[0].to_bool())? ap_const_lv7_24: ap_const_lv7_79);
}

void Zevenseg::thread_tmp_5_fu_221_p1() {
    tmp_5_fu_221_p1 = value_assign_fu_207_p3.read().range(4-1, 0);
}

void Zevenseg::thread_tmp_5_i_fu_256_p2() {
    tmp_5_i_fu_256_p2 = (tmp_3_i_fu_243_p2.read() | tmp_2_i_fu_238_p2.read());
}

void Zevenseg::thread_tmp_6_i_fu_262_p3() {
    tmp_6_i_fu_262_p3 = (!tmp_5_i_fu_256_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_5_i_fu_256_p2.read()[0].to_bool())? tmp_4_i_fu_248_p3.read(): tmp_1_i_fu_230_p3.read());
}

void Zevenseg::thread_tmp_7_i_fu_270_p2() {
    tmp_7_i_fu_270_p2 = (!value_assign_reg_464.read().is_01() || !ap_const_lv32_3.is_01())? sc_lv<1>(): sc_lv<1>(value_assign_reg_464.read() == ap_const_lv32_3);
}

void Zevenseg::thread_tmp_8_i_fu_275_p2() {
    tmp_8_i_fu_275_p2 = (!value_assign_reg_464.read().is_01() || !ap_const_lv32_4.is_01())? sc_lv<1>(): sc_lv<1>(value_assign_reg_464.read() == ap_const_lv32_4);
}

void Zevenseg::thread_tmp_9_i_cast_cast_fu_280_p3() {
    tmp_9_i_cast_cast_fu_280_p3 = (!tmp_8_i_fu_275_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_8_i_fu_275_p2.read()[0].to_bool())? ap_const_lv7_19: ap_const_lv7_30);
}

void Zevenseg::thread_tmp_fu_141_p2() {
    tmp_fu_141_p2 = (!ap_const_lv32_1.is_01() || !value_r.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(value_r.read()));
}

void Zevenseg::thread_tmp_i_fu_225_p2() {
    tmp_i_fu_225_p2 = (!value_assign_reg_464.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(value_assign_reg_464.read() == ap_const_lv32_0);
}

void Zevenseg::thread_value_assign_fu_207_p0() {
    value_assign_fu_207_p0 =  (sc_lv<1>) (sw.read());
}

void Zevenseg::thread_value_assign_fu_207_p3() {
    value_assign_fu_207_p3 = (!value_assign_fu_207_p0.read()[0].is_01())? sc_lv<32>(): ((value_assign_fu_207_p0.read()[0].to_bool())? p_s_fu_163_p3.read(): p_1_cast_fu_203_p1.read());
}

void Zevenseg::thread_value_display_i_fu_444_p3() {
    value_display_i_fu_444_p3 = (!tmp_35_i_fu_440_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_35_i_fu_440_p2.read()[0].to_bool())? tmp_34_i_cast_cast_fu_433_p3.read(): tmp_31_i_fu_425_p3.read());
}

void Zevenseg::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if (!esl_seteq<1,1,1>(exitcond_fu_452_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

void Zevenseg::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sw\" :  \"" << sw.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"led_V\" :  \"" << led_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"led_V_ap_vld\" :  \"" << led_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"display_V\" :  \"" << display_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"display_V_ap_vld\" :  \"" << display_V_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}


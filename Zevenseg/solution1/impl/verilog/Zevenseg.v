// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Zevenseg,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.998000,HLS_SYN_LAT=100000003,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=119,HLS_SYN_LUT=533}" *)

module Zevenseg (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sw,
        led_V,
        led_V_ap_vld,
        display_V,
        display_V_ap_vld
);

parameter    ap_ST_fsm_state1 = 4'b1;
parameter    ap_ST_fsm_state2 = 4'b10;
parameter    ap_ST_fsm_state3 = 4'b100;
parameter    ap_ST_fsm_state4 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv27_0 = 27'b000000000000000000000000000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv28_0 = 28'b0000000000000000000000000000;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv31_7FFFFFFF = 31'b1111111111111111111111111111111;
parameter    ap_const_lv31_F = 31'b1111;
parameter    ap_const_lv7_40 = 7'b1000000;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv7_24 = 7'b100100;
parameter    ap_const_lv7_79 = 7'b1111001;
parameter    ap_const_lv7_19 = 7'b11001;
parameter    ap_const_lv7_30 = 7'b110000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv7_2 = 7'b10;
parameter    ap_const_lv7_12 = 7'b10010;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv7_E = 7'b1110;
parameter    ap_const_lv7_78 = 7'b1111000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv7_8 = 7'b1000;
parameter    ap_const_lv7_10 = 7'b10000;
parameter    ap_const_lv7_46 = 7'b1000110;
parameter    ap_const_lv7_3 = 7'b11;
parameter    ap_const_lv7_6 = 7'b110;
parameter    ap_const_lv7_21 = 7'b100001;
parameter    ap_const_lv27_5F5E100 = 27'b101111101011110000100000000;
parameter    ap_const_lv27_1 = 27'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   sw;
output  [3:0] led_V;
output   led_V_ap_vld;
output  [6:0] display_V;
output   display_V_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg led_V_ap_vld;
reg display_V_ap_vld;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [31:0] value_r;
wire   [31:0] value_assign_fu_207_p3;
reg   [31:0] value_assign_reg_464;
wire   [3:0] tmp_5_fu_221_p1;
reg   [3:0] tmp_5_reg_483;
wire   [6:0] tmp_21_i_fu_358_p3;
reg   [6:0] tmp_21_i_reg_488;
wire   [0:0] ap_CS_fsm_state2;
wire   [0:0] tmp_22_i_fu_366_p2;
reg   [0:0] tmp_22_i_reg_493;
wire   [0:0] tmp_23_i_fu_371_p2;
reg   [0:0] tmp_23_i_reg_498;
wire   [0:0] tmp_27_i_fu_376_p2;
reg   [0:0] tmp_27_i_reg_504;
wire   [0:0] tmp_28_i_fu_381_p2;
reg   [0:0] tmp_28_i_reg_509;
wire   [0:0] tmp_32_i_fu_386_p2;
reg   [0:0] tmp_32_i_reg_515;
wire   [0:0] tmp_33_i_fu_391_p2;
reg   [0:0] tmp_33_i_reg_520;
wire   [6:0] value_display_i_fu_444_p3;
reg   [6:0] value_display_i_reg_526;
wire   [0:0] ap_CS_fsm_state3;
wire   [26:0] i_1_fu_458_p2;
wire   [0:0] ap_CS_fsm_state4;
reg   [26:0] i_reg_126;
wire   [0:0] exitcond_fu_452_p2;
wire   [31:0] tmp_fu_141_p2;
wire   [27:0] tmp_1_fu_147_p4;
wire   [0:0] icmp_fu_157_p2;
wire   [30:0] tmp_3_fu_171_p1;
wire   [31:0] tmp_2_fu_175_p2;
wire   [0:0] tmp_4_fu_187_p3;
wire   [30:0] tmp_2_cast_fu_181_p2;
wire   [30:0] p_1_fu_195_p3;
wire   [0:0] value_assign_fu_207_p0;
wire   [31:0] p_s_fu_163_p3;
wire   [31:0] p_1_cast_fu_203_p1;
wire   [0:0] tmp_i_fu_225_p2;
wire   [0:0] tmp_3_i_fu_243_p2;
wire   [0:0] tmp_2_i_fu_238_p2;
wire   [0:0] tmp_5_i_fu_256_p2;
wire   [6:0] tmp_4_i_fu_248_p3;
wire   [6:0] tmp_1_i_fu_230_p3;
wire   [0:0] tmp_8_i_fu_275_p2;
wire   [0:0] tmp_7_i_fu_270_p2;
wire   [0:0] tmp_10_i_fu_288_p2;
wire   [6:0] tmp_9_i_cast_cast_fu_280_p3;
wire   [6:0] tmp_6_i_fu_262_p3;
wire   [0:0] tmp_13_i_fu_307_p2;
wire   [0:0] tmp_12_i_fu_302_p2;
wire   [0:0] tmp_15_i_fu_320_p2;
wire   [6:0] tmp_14_i_cast_cast_fu_312_p3;
wire   [6:0] tmp_11_i_fu_294_p3;
wire   [0:0] tmp_18_i_fu_339_p2;
wire   [0:0] tmp_17_i_fu_334_p2;
wire   [0:0] tmp_20_i_fu_352_p2;
wire   [6:0] tmp_19_i_cast_cast_fu_344_p3;
wire   [6:0] tmp_16_i_fu_326_p3;
wire   [0:0] tmp_25_i_fu_403_p2;
wire   [6:0] tmp_24_i_cast_cast_fu_396_p3;
wire   [0:0] tmp_30_i_fu_421_p2;
wire   [6:0] tmp_29_i_fu_414_p3;
wire   [6:0] tmp_26_i_fu_407_p3;
wire   [0:0] tmp_35_i_fu_440_p2;
wire   [6:0] tmp_34_i_cast_cast_fu_433_p3;
wire   [6:0] tmp_31_i_fu_425_p3;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'b1;
#0 value_r = 32'b00000000000000000000000000000000;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond_fu_452_p2 == 1'b0))) begin
        i_reg_126 <= i_1_fu_458_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_126 <= ap_const_lv27_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_21_i_reg_488 <= tmp_21_i_fu_358_p3;
        tmp_22_i_reg_493 <= tmp_22_i_fu_366_p2;
        tmp_23_i_reg_498 <= tmp_23_i_fu_371_p2;
        tmp_27_i_reg_504 <= tmp_27_i_fu_376_p2;
        tmp_28_i_reg_509 <= tmp_28_i_fu_381_p2;
        tmp_32_i_reg_515 <= tmp_32_i_fu_386_p2;
        tmp_33_i_reg_520 <= tmp_33_i_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        tmp_5_reg_483 <= tmp_5_fu_221_p1;
        value_assign_reg_464 <= value_assign_fu_207_p3;
        value_r <= value_assign_fu_207_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        value_display_i_reg_526 <= value_display_i_fu_444_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & ~(exitcond_fu_452_p2 == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & ~(exitcond_fu_452_p2 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond_fu_452_p2 == 1'b0))) begin
        display_V_ap_vld = 1'b1;
    end else begin
        display_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond_fu_452_p2 == 1'b0))) begin
        led_V_ap_vld = 1'b1;
    end else begin
        led_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (~(exitcond_fu_452_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign display_V = value_display_i_reg_526;

assign exitcond_fu_452_p2 = ((i_reg_126 == ap_const_lv27_5F5E100) ? 1'b1 : 1'b0);

assign i_1_fu_458_p2 = (i_reg_126 + ap_const_lv27_1);

assign icmp_fu_157_p2 = (($signed(tmp_1_fu_147_p4) > $signed(28'b0000000000000000000000000000)) ? 1'b1 : 1'b0);

assign led_V = tmp_5_reg_483;

assign p_1_cast_fu_203_p1 = p_1_fu_195_p3;

assign p_1_fu_195_p3 = ((tmp_4_fu_187_p3[0:0] === 1'b1) ? ap_const_lv31_F : tmp_2_cast_fu_181_p2);

assign p_s_fu_163_p3 = ((icmp_fu_157_p2[0:0] === 1'b1) ? ap_const_lv32_0 : tmp_fu_141_p2);

assign tmp_10_i_fu_288_p2 = (tmp_8_i_fu_275_p2 | tmp_7_i_fu_270_p2);

assign tmp_11_i_fu_294_p3 = ((tmp_10_i_fu_288_p2[0:0] === 1'b1) ? tmp_9_i_cast_cast_fu_280_p3 : tmp_6_i_fu_262_p3);

assign tmp_12_i_fu_302_p2 = ((value_assign_reg_464 == ap_const_lv32_5) ? 1'b1 : 1'b0);

assign tmp_13_i_fu_307_p2 = ((value_assign_reg_464 == ap_const_lv32_6) ? 1'b1 : 1'b0);

assign tmp_14_i_cast_cast_fu_312_p3 = ((tmp_13_i_fu_307_p2[0:0] === 1'b1) ? ap_const_lv7_2 : ap_const_lv7_12);

assign tmp_15_i_fu_320_p2 = (tmp_13_i_fu_307_p2 | tmp_12_i_fu_302_p2);

assign tmp_16_i_fu_326_p3 = ((tmp_15_i_fu_320_p2[0:0] === 1'b1) ? tmp_14_i_cast_cast_fu_312_p3 : tmp_11_i_fu_294_p3);

assign tmp_17_i_fu_334_p2 = ((value_assign_reg_464 == ap_const_lv32_7) ? 1'b1 : 1'b0);

assign tmp_18_i_fu_339_p2 = ((value_assign_reg_464 == ap_const_lv32_F) ? 1'b1 : 1'b0);

assign tmp_19_i_cast_cast_fu_344_p3 = ((tmp_18_i_fu_339_p2[0:0] === 1'b1) ? ap_const_lv7_E : ap_const_lv7_78);

assign tmp_1_fu_147_p4 = {{tmp_fu_141_p2[ap_const_lv32_1F : ap_const_lv32_4]}};

assign tmp_1_i_fu_230_p3 = ((tmp_i_fu_225_p2[0:0] === 1'b1) ? ap_const_lv7_40 : ap_const_lv7_0);

assign tmp_20_i_fu_352_p2 = (tmp_18_i_fu_339_p2 | tmp_17_i_fu_334_p2);

assign tmp_21_i_fu_358_p3 = ((tmp_20_i_fu_352_p2[0:0] === 1'b1) ? tmp_19_i_cast_cast_fu_344_p3 : tmp_16_i_fu_326_p3);

assign tmp_22_i_fu_366_p2 = ((value_assign_reg_464 == ap_const_lv32_9) ? 1'b1 : 1'b0);

assign tmp_23_i_fu_371_p2 = ((value_assign_reg_464 == ap_const_lv32_A) ? 1'b1 : 1'b0);

assign tmp_24_i_cast_cast_fu_396_p3 = ((tmp_23_i_reg_498[0:0] === 1'b1) ? ap_const_lv7_8 : ap_const_lv7_10);

assign tmp_25_i_fu_403_p2 = (tmp_23_i_reg_498 | tmp_22_i_reg_493);

assign tmp_26_i_fu_407_p3 = ((tmp_25_i_fu_403_p2[0:0] === 1'b1) ? tmp_24_i_cast_cast_fu_396_p3 : tmp_21_i_reg_488);

assign tmp_27_i_fu_376_p2 = ((value_assign_reg_464 == ap_const_lv32_B) ? 1'b1 : 1'b0);

assign tmp_28_i_fu_381_p2 = ((value_assign_reg_464 == ap_const_lv32_C) ? 1'b1 : 1'b0);

assign tmp_29_i_fu_414_p3 = ((tmp_28_i_reg_509[0:0] === 1'b1) ? ap_const_lv7_46 : ap_const_lv7_3);

assign tmp_2_cast_fu_181_p2 = ($signed(ap_const_lv31_7FFFFFFF) + $signed(tmp_3_fu_171_p1));

assign tmp_2_fu_175_p2 = ($signed(ap_const_lv32_FFFFFFFF) + $signed(value_r));

assign tmp_2_i_fu_238_p2 = ((value_assign_reg_464 == ap_const_lv32_1) ? 1'b1 : 1'b0);

assign tmp_30_i_fu_421_p2 = (tmp_28_i_reg_509 | tmp_27_i_reg_504);

assign tmp_31_i_fu_425_p3 = ((tmp_30_i_fu_421_p2[0:0] === 1'b1) ? tmp_29_i_fu_414_p3 : tmp_26_i_fu_407_p3);

assign tmp_32_i_fu_386_p2 = ((value_assign_reg_464 == ap_const_lv32_D) ? 1'b1 : 1'b0);

assign tmp_33_i_fu_391_p2 = ((value_assign_reg_464 == ap_const_lv32_E) ? 1'b1 : 1'b0);

assign tmp_34_i_cast_cast_fu_433_p3 = ((tmp_33_i_reg_520[0:0] === 1'b1) ? ap_const_lv7_6 : ap_const_lv7_21);

assign tmp_35_i_fu_440_p2 = (tmp_33_i_reg_520 | tmp_32_i_reg_515);

assign tmp_3_fu_171_p1 = value_r[30:0];

assign tmp_3_i_fu_243_p2 = ((value_assign_reg_464 == ap_const_lv32_2) ? 1'b1 : 1'b0);

assign tmp_4_fu_187_p3 = tmp_2_fu_175_p2[ap_const_lv32_1F];

assign tmp_4_i_fu_248_p3 = ((tmp_3_i_fu_243_p2[0:0] === 1'b1) ? ap_const_lv7_24 : ap_const_lv7_79);

assign tmp_5_fu_221_p1 = value_assign_fu_207_p3[3:0];

assign tmp_5_i_fu_256_p2 = (tmp_3_i_fu_243_p2 | tmp_2_i_fu_238_p2);

assign tmp_6_i_fu_262_p3 = ((tmp_5_i_fu_256_p2[0:0] === 1'b1) ? tmp_4_i_fu_248_p3 : tmp_1_i_fu_230_p3);

assign tmp_7_i_fu_270_p2 = ((value_assign_reg_464 == ap_const_lv32_3) ? 1'b1 : 1'b0);

assign tmp_8_i_fu_275_p2 = ((value_assign_reg_464 == ap_const_lv32_4) ? 1'b1 : 1'b0);

assign tmp_9_i_cast_cast_fu_280_p3 = ((tmp_8_i_fu_275_p2[0:0] === 1'b1) ? ap_const_lv7_19 : ap_const_lv7_30);

assign tmp_fu_141_p2 = (ap_const_lv32_1 + value_r);

assign tmp_i_fu_225_p2 = ((value_assign_reg_464 == ap_const_lv32_0) ? 1'b1 : 1'b0);

assign value_assign_fu_207_p0 = sw;

assign value_assign_fu_207_p3 = ((value_assign_fu_207_p0[0:0] === 1'b1) ? p_s_fu_163_p3 : p_1_cast_fu_203_p1);

assign value_display_i_fu_444_p3 = ((tmp_35_i_fu_440_p2[0:0] === 1'b1) ? tmp_34_i_cast_cast_fu_433_p3 : tmp_31_i_fu_425_p3);

endmodule //Zevenseg
